# Generated by Django 5.2.4 on 2025-09-22 10:18

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('messaging', '0006_alter_whatsappconnection_provider'),
    ]

    operations = [
        migrations.AddField(
            model_name='contest',
            name='agreement_message',
            field=models.TextField(blank=True, help_text='Message sent when participant agrees to terms', null=True),
        ),
        migrations.AddField(
            model_name='contest',
            name='contest_introduction',
            field=models.TextField(blank=True, help_text='Introduction to contest rules and process', null=True),
        ),
        migrations.AddField(
            model_name='contest',
            name='failure_message',
            field=models.TextField(blank=True, help_text='Message sent when entry fails', null=True),
        ),
        migrations.AddField(
            model_name='contest',
            name='instruction_image',
            field=models.URLField(blank=True, help_text='Image/GIF URL for submission instructions', null=True),
        ),
        migrations.AddField(
            model_name='contest',
            name='instructions',
            field=models.TextField(blank=True, help_text='Detailed instructions for participants', null=True),
        ),
        migrations.AddField(
            model_name='contest',
            name='pdpa_url',
            field=models.URLField(blank=True, help_text='PDPA privacy policy URL', null=True),
        ),
        migrations.AddField(
            model_name='contest',
            name='rejection_message',
            field=models.TextField(blank=True, help_text='Message sent when participant rejects terms', null=True),
        ),
        migrations.AddField(
            model_name='contest',
            name='submission_requirements',
            field=models.TextField(blank=True, help_text='Instructions for submission requirements', null=True),
        ),
        migrations.AddField(
            model_name='contest',
            name='success_message',
            field=models.TextField(blank=True, help_text='Message sent when entry is successful', null=True),
        ),
        migrations.AddField(
            model_name='contest',
            name='welcome_message',
            field=models.TextField(blank=True, help_text='Welcome message for participants', null=True),
        ),
        migrations.CreateModel(
            name='ContestFlowState',
            fields=[
                ('flow_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('current_step', models.CharField(choices=[('initial', 'Initial Contact'), ('pdpa_sent', 'PDPA Message Sent'), ('pdpa_response', 'PDPA Response Received'), ('instructions_sent', 'Instructions Sent'), ('awaiting_submission', 'Awaiting Submission'), ('submitted', 'Submitted'), ('completed', 'Completed')], default='initial', max_length=20)),
                ('started_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('pdpa_response', models.CharField(blank=True, max_length=10, null=True)),
                ('pdpa_responded_at', models.DateTimeField(blank=True, null=True)),
                ('messages_sent', models.JSONField(blank=True, default=list)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flow_states', to='messaging.contest')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contest_flows', to='messaging.customer')),
            ],
            options={
                'ordering': ['-last_updated'],
                'unique_together': {('customer', 'contest')},
            },
        ),
    ]
