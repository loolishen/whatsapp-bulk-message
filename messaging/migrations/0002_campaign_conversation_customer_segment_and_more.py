# Generated by Django 5.2.4 on 2025-09-11 06:38

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('messaging', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('campaign_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('status', models.TextField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed')], default='draft')),
                ('send_start_at', models.DateTimeField(blank=True, null=True)),
                ('send_end_at', models.DateTimeField(blank=True, null=True)),
                ('time_zone', models.TextField(default='UTC')),
                ('throttle_per_min', models.IntegerField(default=60)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('conversation_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('channel', models.TextField(default='whatsapp')),
                ('last_message_at', models.DateTimeField(blank=True, null=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('customer_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('phone_number', models.TextField()),
                ('ic_number', models.TextField(blank=True, help_text='Encrypted IC number', null=True)),
                ('gender', models.TextField(choices=[('N/A', 'N/A'), ('M', 'Male'), ('F', 'Female'), ('NB', 'Non-binary'), ('PNS', 'Prefer not to say')], default='N/A')),
                ('marital_status', models.TextField(choices=[('N/A', 'N/A'), ('SINGLE', 'Single'), ('MARRIED', 'Married'), ('DIVORCED', 'Divorced'), ('WIDOWED', 'Widowed')], default='N/A')),
                ('age', models.IntegerField(blank=True, null=True)),
                ('city', models.TextField(blank=True, null=True)),
                ('state', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Segment',
            fields=[
                ('segment_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('definition_json', models.JSONField(default=dict, help_text='JSON definition of segment criteria')),
                ('is_dynamic', models.BooleanField(default=True)),
                ('last_materialized_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='TemplateMessage',
            fields=[
                ('template_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category', models.TextField(choices=[('marketing', 'Marketing'), ('utility', 'Utility'), ('authentication', 'Authentication'), ('transactional', 'Transactional')])),
                ('body', models.TextField(help_text='Template body with placeholders like {{name}}')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('tenant_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('plan', models.TextField()),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('company_address', models.TextField(blank=True, null=True)),
                ('company_registration_number', models.TextField(blank=True, null=True)),
                ('company_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('company_phone_number', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.RemoveField(
            model_name='bulkmessage',
            name='message',
        ),
        migrations.RemoveField(
            model_name='bulkmessage',
            name='recipients',
        ),
        migrations.CreateModel(
            name='CampaignRun',
            fields=[
                ('run_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('segment_version_json', models.JSONField(default=dict, help_text='Snapshot of segment definition at run time')),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(choices=[('initializing', 'Initializing'), ('sending', 'Sending'), ('completed', 'Completed'), ('failed', 'Failed')], default='initializing')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='runs', to='messaging.campaign')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaign_runs', to='messaging.tenant')),
            ],
        ),
        migrations.CreateModel(
            name='CampaignVariant',
            fields=[
                ('variant_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('split_pct', models.IntegerField(help_text='Percentage of recipients for this variant')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='messaging.campaign')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='messaging.templatemessage')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaign_variants', to='messaging.tenant')),
            ],
        ),
        migrations.CreateModel(
            name='CampaignRecipient',
            fields=[
                ('recipient_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('skip_reason', models.TextField(blank=True, null=True)),
                ('selected', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipients', to='messaging.campaign')),
                ('run', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipients', to='messaging.campaignrun')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipients', to='messaging.campaignvariant')),
                ('conversation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='campaign_recipients', to='messaging.conversation')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaign_recipients', to='messaging.customer')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaign_recipients', to='messaging.tenant')),
            ],
        ),
        migrations.CreateModel(
            name='CampaignMessage',
            fields=[
                ('campaign_message_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.TextField(choices=[('queued', 'Queued'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('read', 'Read'), ('failed', 'Failed')], default='queued')),
                ('error_code', models.TextField(blank=True, null=True)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='messaging.campaign')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='messaging.campaignrecipient')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='messaging.campaignvariant')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaign_messages', to='messaging.templatemessage')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaign_messages', to='messaging.tenant')),
            ],
        ),
        migrations.CreateModel(
            name='CoreMessage',
            fields=[
                ('message_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('direction', models.TextField(blank=True, choices=[('inbound', 'Inbound'), ('outbound', 'Outbound')], null=True)),
                ('status', models.TextField(choices=[('queued', 'Queued'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('read', 'Read'), ('failed', 'Failed')], default='queued')),
                ('text_body', models.TextField(blank=True, null=True)),
                ('provider_msg_id', models.TextField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('conversation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='messaging.conversation')),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='messaging.tenant')),
            ],
            options={
                'db_table': 'messages',
            },
        ),
        migrations.AddField(
            model_name='conversation',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to='messaging.customer'),
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('receipt_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('purchase_date', models.DateTimeField()),
                ('subtotal', models.IntegerField()),
                ('discount', models.IntegerField(default=0)),
                ('tax', models.IntegerField(default=0)),
                ('total', models.IntegerField()),
                ('ocr_confidence', models.FloatField(blank=True, null=True)),
                ('source_image_path', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receipts', to='messaging.customer')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receipts', to='messaging.tenant')),
            ],
        ),
        migrations.AddField(
            model_name='campaign',
            name='segment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaigns', to='messaging.segment'),
        ),
        migrations.AddField(
            model_name='templatemessage',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='templates', to='messaging.tenant'),
        ),
        migrations.CreateModel(
            name='SendQueue',
            fields=[
                ('queue_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('scheduled_at', models.DateTimeField()),
                ('status', models.TextField(choices=[('queued', 'Queued'), ('processing', 'Processing'), ('sent', 'Sent'), ('failed', 'Failed')], default='queued')),
                ('retry_count', models.IntegerField(default=0)),
                ('max_retries', models.IntegerField(default=3)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('campaign_message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='queue_entries', to='messaging.campaignmessage')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='send_queue', to='messaging.tenant')),
            ],
            options={
                'ordering': ['scheduled_at'],
            },
        ),
        migrations.AddField(
            model_name='segment',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='segments', to='messaging.tenant'),
        ),
        migrations.CreateModel(
            name='ReceiptItem',
            fields=[
                ('item_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('description', models.TextField()),
                ('qty', models.IntegerField()),
                ('unit_price', models.IntegerField()),
                ('receipt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='messaging.receipt')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receipt_items', to='messaging.tenant')),
            ],
        ),
        migrations.CreateModel(
            name='MessageAttachment',
            fields=[
                ('attachment_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('kind', models.TextField(choices=[('image', 'Image'), ('video', 'Video'), ('audio', 'Audio'), ('document', 'Document')])),
                ('storage_path', models.TextField()),
                ('mime_type', models.TextField()),
                ('bytes_size', models.BigIntegerField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='messaging.coremessage')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='messaging.tenant')),
            ],
        ),
        migrations.AddField(
            model_name='customer',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customers', to='messaging.tenant'),
        ),
        migrations.AddField(
            model_name='conversation',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to='messaging.tenant'),
        ),
        migrations.CreateModel(
            name='Consent',
            fields=[
                ('consent_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.TextField(choices=[('pdpa', 'PDPA'), ('marketing', 'Marketing'), ('whatsapp', 'WhatsApp'), ('email', 'Email')])),
                ('status', models.TextField(choices=[('granted', 'Granted'), ('withdrawn', 'Withdrawn')])),
                ('occurred_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consents', to='messaging.customer')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consents', to='messaging.tenant')),
            ],
        ),
        migrations.AddField(
            model_name='campaign',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaigns', to='messaging.tenant'),
        ),
        migrations.CreateModel(
            name='WhatsAppConnection',
            fields=[
                ('whatsapp_connection_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('phone_number', models.TextField()),
                ('access_token_ref', models.TextField(help_text='Reference to secret manager, not raw token')),
                ('instance_id', models.TextField()),
                ('provider', models.TextField(choices=[('wabot', 'WABot'), ('meta', 'Meta Business API'), ('twilio', 'Twilio')])),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='whatsapp_connections', to='messaging.tenant')),
            ],
        ),
        migrations.AddField(
            model_name='templatemessage',
            name='whatsapp_connection',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='templates', to='messaging.whatsappconnection'),
        ),
        migrations.AddField(
            model_name='conversation',
            name='whatsapp_connection',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to='messaging.whatsappconnection'),
        ),
        migrations.AddField(
            model_name='campaignrecipient',
            name='whatsapp_connection',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaign_recipients', to='messaging.whatsappconnection'),
        ),
        migrations.DeleteModel(
            name='Message',
        ),
        migrations.DeleteModel(
            name='BulkMessage',
        ),
        migrations.DeleteModel(
            name='Contact',
        ),
        migrations.AddIndex(
            model_name='sendqueue',
            index=models.Index(fields=['status', 'scheduled_at'], name='messaging_s_status_0007ab_idx'),
        ),
        migrations.AddIndex(
            model_name='sendqueue',
            index=models.Index(fields=['tenant', 'status'], name='messaging_s_tenant__2c3f22_idx'),
        ),
    ]
